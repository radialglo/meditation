function Meditation(a,b,d){this.$board=$("#"+a);"single-player"===b?$("#mode-1").attr("checked",!0):$("#mode-2").attr("checked",!0);var c="carbon_fibre";this.settings={set_single_player:function(){b="single-player"},is_single_player:function(){return"single-player"===b},set_two_player:function(){b="two-player"},is_two_player:function(){return"two-player"===b},get_card_background:function(){return c},set_card_background:function(a){$(".front").removeClass(this.get_card_background()).addClass(a);c=
a}};this.new_board=!0;this.started=!1;this.setImages(d);this.generateBoard()}
Meditation.prototype={min_count:14,wait_time:1E3,set_card_one:function(a){this.card_one=a},set_card_two:function(a){this.card_two=a},cardsEqual:function(){return this.card_one===this.card_two},get_flip_count:function(){return this.flip_count},increment_flip_count:function(){this.flip_count++},reset_flip_count:function(){this.flip_count=0},reset_flips:function(){var a=this;setTimeout(function(){$(".flip").removeClass("flip");a.reset_flip_count()},this.wait_time)},increment_pair_count:function(){this.pair_count++},
reset_pair_count:function(){this.pair_count=0},gameOver:function(){return this.pair_count==this.min_count},setImages:function(a){if(a.length>=this.min_count)a=shuffle(a).slice(0,this.min_count),a.forEach(function(b){a.push(b)}),this.image_list=shuffle(a);else throw"There must be a minimum of "+this.min_count+" images provided.";},getImages:function(){return this.image_list},get_board:function(){return this.$board},generateBoard:function(){var a=this.get_board(),b=this.getImages();this.reset_pair_count();
this.reset_flip_count();if(this.new_board){for(var d=$(document.createDocumentFragment()),c=0;c<b.length;c++)d.append($("<div/>").addClass("holder").append($("<div/>").addClass("card").append($("<div/>").addClass("front face"),$("<img/>").attr({src:b[c]}).addClass("back face"))).data("index",c));a.append(d);this.attach_card_handler();this.settings.set_card_background(this.settings.get_card_background());this.new_board=!1}else $(".holder").each(function(a){$(this).find("img").attr("src",b[a])});var e=
this;$("img").load(function(){if(e.settings.is_single_player())e.initialize_single_player();else if(e.settings.is_two_player())e.initialize_two_player();else throw"Invalid game mode selected";$("#loader").hide();e.started=!0})},attach_card_handler:function(){var a=this;this.get_board().on("click",".holder",function(){var b=$(this),d=b.data("index"),d=a.getImages()[d];a.started&&(!b.hasClass("flip")&&!b.hasClass("done")&&2>a.get_flip_count())&&(b.toggleClass("flip"),a.increment_flip_count(),1===a.get_flip_count()&&
a.set_card_one(d),2===a.get_flip_count()&&(a.set_card_two(d),a.cardsEqual()?($(".flip").addClass("done").removeClass("flip"),a.reset_flip_count(),a.increment_pair_count(),a.settings.is_two_player()&&(a.is_turn_one()?a.increment_score_one():a.increment_score_two()),a.gameOver()&&(a.display_results(),a.started=!1)):(a.reset_flips(),a.settings.is_two_player()&&a.change_turns())))})},initialize_single_player:function(){$("#scoreboard").text("").append("<div id='clock'><span id='min'>00</span><em>:</em><span id='sec'>00</span><em>:</em><span id='centisec'>00</span></div>");
this.start_watch()},start_watch:function(){this.start_time=(new Date).getTime();this.count()},count:function(){var a=this;if(!a.gameOver()){var b=(new Date).getTime()-a.start_time,d=Math.floor(b/6E4),c=Math.floor(b%6E4/1E3),b=Math.floor(b%1E3/10);$("#sec").text(c.toString().replace(/^(\d)$/,"0$1"));$("#min").text(d.toString().replace(/^(\d)$/,"0$1"));$("#centisec").text(b.toString().replace(/^(\d)$/,"0$1"));setTimeout(function(){a.count()},10)}},is_turn_one:function(){return this.turn_one},player_one_wins:function(){return this.player_one_score>
this.player_two_score},is_tie:function(){return this.player_one_score===this.player_two_score},initialize_two_player:function(){$("#scoreboard").html("").append("<i id='player_one' class='icon-user' ></i><span id='score_one' class='score' >0</span><i id='player_two' class='icon-user'></i><span id='score_two' class='score'>0</span>");this.turn_one=!0;this.reset_pair_count();this.reset_scores();setTimeout(function(){$("#player_one").animate({opacity:1});$("#player_two").animate({opacity:0.3})},this.wait_time)},
change_turns:function(){this.turn_one=!this.turn_one;var a=setTimeout;this.is_turn_one()?($("#player_one").animate({opacity:1}),$("#player_two").animate({opacity:0.3})):($("#player_one").animate({opacity:0.3}),$("#player_two").animate({opacity:1}));a(void 0,this.wait_time)},increment_score_one:function(){this.player_one_score++;this.update_score_one()},increment_score_two:function(){this.player_two_score++;this.update_score_two()},update_score_one:function(){$("#score_one").text(this.player_one_score)},
update_score_two:function(){$("#score_two").text(this.player_two_score)},reset_scores:function(){this.player_two_score=this.player_one_score=0;this.update_score_one();this.update_score_two()},display_results:function(){if(this.settings.is_two_player()){var a='<div class="info"><hr/>',a=this.is_tie()?a+'<i class="icon-user orange"></i><i class="icon-user orange_red"></i>Tie Game':this.player_one_wins()?a+'<i class="icon-user orange">Wins</i>':a+'<i class="icon-user orange_red">Wins</i>';$("#overlay").html("").append(a+
'<hr/><i class="icon-play-circle2" title="Play Again"></i><i class="icon-cancel close" title="Close"></i></div></div>').fadeIn()}else $("#overlay").html("").append('<div class="info"><hr/><i class="icon-trophy"></i><hr/>Puzzle Solved! Time: <span class="time">'+$("#clock").text()+'</span><hr/><i class="icon-play-circle2" title="Play Again"></i><i class="icon-cancel close" title="Close"></i>').fadeIn()},restart:function(a){this.started=!1;$(".done").removeClass("done");$(".flip").removeClass("flip");
var b=this;setTimeout(function(){b.setImages(a);b.generateBoard()},2*b.wait_time)}};function shuffle(a){for(var b,d,c=a.length-1;0<c;c--)b=Math.floor(Math.random()*c),d=a[b],a[b]=a[c],a[c]=d;return a};