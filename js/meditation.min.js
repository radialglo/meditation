!function(t){"use strict";function e(t,e,i){this.$board=$("#"+t),"single-player"===e?$("#mode-1").attr("checked",!0):$("#mode-2").attr("checked",!0),this.settings=function(){var t="carbon_fibre";return{set_single_player:function(){e="single-player"},is_single_player:function(){return"single-player"===e},set_two_player:function(){e="two-player"},is_two_player:function(){return"two-player"===e},get_card_background:function(){return t},set_card_background:function(e){$(".front").removeClass(this.get_card_background()).addClass(e),t=e}}}(),this.new_board=!0,this.started=!1,this.setImages(i),this.generateBoard()}function i(t){for(var e,i,n=t.length-1;n>0;n--)e=Math.floor(Math.random()*n),i=t[e],t[e]=t[n],t[n]=i;return t}e.prototype={constructor:e,MIN_COUNT:14,WAIT_TIME:1e3,set_card_one:function(t){this.card_one=t},set_card_two:function(t){this.card_two=t},cardsEqual:function(){return this.card_one===this.card_two},get_flip_count:function(){return this.flip_count},increment_flip_count:function(){this.flip_count++},reset_flip_count:function(){this.flip_count=0},reset_flips:function(){setTimeout(function(t){return function(){$(".flip").removeClass("flip"),t.reset_flip_count()}}(this),this.WAIT_TIME)},increment_pair_count:function(){this.pair_count++},reset_pair_count:function(){this.pair_count=0},gameOver:function(){return this.pair_count===this.MIN_COUNT},setImages:function(t){if(!(t.length>=this.MIN_COUNT))throw new Error("There must be a minimum of "+this.MIN_COUNT+" images provided.");t=i(t).slice(0,this.MIN_COUNT),t=t.concat(t),this.image_list=i(t)},getImages:function(){return this.image_list},get_board:function(){return this.$board},generateBoard:function(){var t=this.get_board(),e=this.getImages();if(this.reset_pair_count(),this.reset_flip_count(),this.new_board){for(var i=$(document.createDocumentFragment()),n=0;n<e.length;n++)i.append($("<div/>").addClass("holder").append($("<div/>").addClass("card").append($("<div/>").addClass("front face"),$("<img/>").attr({src:e[n]}).addClass("back face"))).data("index",n));t.append(i),this.attach_card_handler(),this.settings.set_card_background(this.settings.get_card_background()),this.new_board=!1}else $(".holder").each(function(t){$(this).find("img").attr("src",e[t])});var s=this;$("img").load(function(){if(s.settings.is_single_player())s.initialize_single_player();else{if(!s.settings.is_two_player())throw new Error("Invalid game mode selected");s.initialize_two_player()}$("#loader").hide(),s.started=!0})},attach_card_handler:function(){var t=this,e=this.get_board();e.on("click",".holder",function(){var e=$(this),i=e.data("index"),n=t.getImages(),s=n[i];t.started&&!e.hasClass("flip")&&!e.hasClass("done")&&t.get_flip_count()<2&&(e.toggleClass("flip"),t.increment_flip_count(),1===t.get_flip_count()&&t.set_card_one(s),2===t.get_flip_count()&&(t.set_card_two(s),t.cardsEqual()?($(".flip").addClass("done").removeClass("flip"),t.reset_flip_count(),t.increment_pair_count(),t.settings.is_two_player()&&(t.is_turn_one()?t.increment_score_one():t.increment_score_two()),t.gameOver()&&(t.display_results(),t.started=!1)):(t.reset_flips(),t.settings.is_two_player()&&t.change_turns())))})},initialize_single_player:function(){$("#scoreboard").text("").append("<div id='clock'><span id='min'>00</span><em>:</em><span id='sec'>00</span><em>:</em><span id='centisec'>00</span></div>"),this.start_watch()},start_watch:function(){this.start_time=(new Date).getTime(),this.count()},count:function(){!function(t){if(!t.gameOver()){var e=(new Date).getTime()-t.start_time,i=Math.floor(e/6e4),n=Math.floor(e%6e4/1e3),s=Math.floor(e%1e3/10);$("#sec").text(n.toString().replace(/^(\d)$/,"0$1")),$("#min").text(i.toString().replace(/^(\d)$/,"0$1")),$("#centisec").text(s.toString().replace(/^(\d)$/,"0$1")),setTimeout(function(){t.count()},10)}}(this)},is_turn_one:function(){return this.turn_one},player_one_wins:function(){return this.player_one_score>this.player_two_score},is_tie:function(){return this.player_one_score===this.player_two_score},initialize_two_player:function(){$("#scoreboard").html("").append("<i id='player_one' class='icon-user' ></i><span id='score_one' class='score' >0</span><i id='player_two' class='icon-user'></i><span id='score_two' class='score'>0</span>"),this.turn_one=!0,this.reset_pair_count(),this.reset_scores(),setTimeout(function(){$("#player_one").animate({opacity:1}),$("#player_two").animate({opacity:.3})},this.WAIT_TIME)},change_turns:function(){this.turn_one=!this.turn_one,setTimeout(function(t){t.is_turn_one()?($("#player_one").animate({opacity:1}),$("#player_two").animate({opacity:.3})):($("#player_one").animate({opacity:.3}),$("#player_two").animate({opacity:1}))}(this),this.WAIT_TIME)},increment_score_one:function(){this.player_one_score++,this.update_score_one()},increment_score_two:function(){this.player_two_score++,this.update_score_two()},update_score_one:function(){$("#score_one").text(this.player_one_score)},update_score_two:function(){$("#score_two").text(this.player_two_score)},reset_scores:function(){this.player_one_score=0,this.player_two_score=0,this.update_score_one(),this.update_score_two()},display_results:function(){if(this.settings.is_two_player()){var t='<div class="info"><hr/>';t+=this.is_tie()?'<i class="icon-user orange"></i><i class="icon-user orange_red"></i>Tie Game':this.player_one_wins()?'<i class="icon-user orange">Wins</i>':'<i class="icon-user orange_red">Wins</i>',$("#overlay").html("").append(t+"<hr/>"+'<i class="icon-play-circle2" title="Play Again"></i>'+'<i class="icon-cancel close" title="Close"></i></div>'+"</div>").fadeIn()}else $("#overlay").html("").append('<div class="info"><hr/><i class="icon-trophy"></i><hr/>Puzzle Solved! Time: <span class="time">'+$("#clock").text()+"</span>"+"<hr/>"+'<i class="icon-play-circle2" title="Play Again"></i>'+'<i class="icon-cancel close" title="Close"></i>').fadeIn()},restart:function(t){this.started=!1,$(".done").removeClass("done"),$(".flip").removeClass("flip");var e=this;setTimeout(function(){e.setImages(t),e.generateBoard()},2*e.WAIT_TIME)}},"object"==typeof t&&"object"==typeof t.document&&(t.Meditation=e)}(window);